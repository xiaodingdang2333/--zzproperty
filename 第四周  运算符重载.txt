运算符重载的形式：
返回值类型 operator 运算符（形参表）
{
……
}

重载为成员函数时 ， 参数个数为运算符目数减一 。
重载为普通函数时 ， 参数个数为运算符目数 。

赋值运算符“=”只能重载为成员函数，对运算符进行重载的时候，好的风格是应该尽量保留运算符原本的特性

1. C++不允许定义新的运算符 ；
2. 重载后运算符的含义应该符合日常习惯；
 complex_a + complex_b
 word_a > word_b
 date_b = date_a + n
3. 运算符重载不改变运算符的优先级；
4. 以下运算符不能被重载：“.”、“.*”、“::”、“?:”、sizeof；
5. 重载运算符()、[]、->或者赋值运算符=时，运算符重载函数必须声明为
类的成员函数

类型转换运算符重载时不写返回值类型 因为返回的类型就是类型转换运算符的类型

c++里前置++返回的是操作数的引用，所以可以（++a）=1
后置++返回的是一个临时对象，所以不可以（a++）=1
前置比后置快  因为后置会生成新的临时对象，调用构造函数